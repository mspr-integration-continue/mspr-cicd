name: Continuous Integration

on:
  push:
    branches: [master, develop, v1/develop]
  pull_request:
    branches: [master, develop, v1/develop]

jobs:
  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install
        run: npm install
      - name: eslint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-vserion: 12
      - name: install
        run: npm install
      - name: run TU
        run: npm run test

  build:
    needs: [code-style, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install
        run: npm install
      - name: build app
        run: npm run build
      - name: build artifact
        uses: actions/upload-artifact@v2
        with:
          name: vue-app-dist
          path: |
            dist
            !dist/**/*.md
          retention-days: 5
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: vue-app-dist
      - name: compress folder
        run: tar -zcvf vue-app.tar.gz dist/
      - name: Nexus Repository Upload
        run: curl -v -u admin:${{ secrets.NEXUS_PASSWORD }} --upload-file vue-app.tar.gz http://nexus.romainbdt.fr:8081/repository/preudhomme-repo/vue-app.tar.gz

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: vue-app-dist
          path: |
            dist
            !dist/**/*.md
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  documentations:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install
        run: npm install
     # - name: build documentation
     #   run: npm run doc

  release:
    needs: [ documentations ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      # - name: build release
      #  run: npm run changelog-git

  codacy-security-scan:
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          directory: $PWD/src
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

